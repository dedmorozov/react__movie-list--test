{"version":3,"sources":["styles/images/televisor.png","components/MovieList/MovieList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["MovieList","state","date","this","className","PureComponent","App","selectedDay","isSelected","onDaySelected","selected","setState","goBack","props","showId","type","onClick","src","televisor","alt","onClickDay","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,UAA0B,sCCS5BA,EAAb,4MACEC,MAAQ,CACNC,KAAM,oCAFV,uDAKW,IAECA,EAASC,KAAKF,MAAdC,KAER,OAEI,cADF,CACE,OAAKE,UAAU,UAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,oBAAIA,UAAU,aAAd,SAA4BF,MAE9B,oBAAIE,UAAU,gBAAd,SAUE,6BACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,6BAQF,sBAAKA,UAAU,gCAAf,UACE,oBAAIA,UAAU,qBAAd,wIACA,mBAAGA,UAAU,oBAAb,mCAtClB,GAA+BC,iBCqEhBC,G,wNApEbL,MAAQ,CACNM,YAAa,GACbC,YAAY,G,EAGdC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZJ,YAAaG,EACbF,YAAY,K,EAIhBI,OAAS,WACP,EAAKD,SAAS,CACZJ,YAAa,GACbC,YAAY,K,uDAIN,IAAD,EAC6BL,KAAKF,MAApBO,GADd,EACCD,YADD,EACcC,YAEbC,GADWN,KAAKU,MAAhBC,OACkBX,KAAlBM,eAER,OACE,qCACE,wBAAQL,UAAU,mBAAlB,SACE,qBAAKA,UAAU,gBAAf,SACE,oBAAIA,UAAU,oCAAd,4BAGFI,EAsBE,gCACE,wBACEO,KAAK,SACLC,QAASb,KAAKS,OACdR,UAAU,0BAEZ,cAAC,EAAD,OA1BF,gCACE,yBAASA,UAAU,QAAnB,SACE,sBAAKA,UAAU,qBAAf,UACE,8BACE,qBACEA,UAAU,aACVa,IAAKC,EACLC,IAAI,SAGR,mBAAGf,UAAU,cAAb,oaAMJ,cAAC,IAAD,CAAUgB,WAAYX,c,GAlDlBY,IAAMC,YCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ace2efd7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/televisor.3bca90b2.png\";","import React, { PureComponent } from 'react';\n// import PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard/MovieCard';\n// import { Portal } from '../Portal/Portal';\nimport { getShow } from '../../components/api';\n\n// const list = 'http://api.tvmaze.com/shows';\nimport televisor from '../../styles/images/televisor.png';\n\nexport class MovieList extends PureComponent {\n  state = {\n    date: '10 июля 2018',\n  }\n\n  render() {\n    // const currentDay = .find(x => x.id === selectedDay);\n    const { date } = this.state;\n\n    return (\n      // <>\n        <div className=\"content\">\n          <div className=\"content__date date\">\n            <h1 className=\"date__text\">{date}</h1>\n          </div>\n          <ul className=\"content__list\">\n            {/* {list.map(item => (\n              <li key={item.id}>\n                <MovieCard\n                  title={item.show.name}\n                  year={item.show.premiered.join('', 4)}\n                  imgUrl={item.image.medium}\n                />\n              </li>\n            ))} */}\n            <li>\n              <div className=\"card\">\n                <div className=\"card__img\">\n                  <figure>\n                    {/* <img\n                      src={televisor}\n                      alt=\"Film logo\"\n                    /> */}\n                  </figure>\n                </div>\n\n                <div className=\"card__description description\">\n                  <h5 className=\"description__title\">Теория большого взрыва</h5>\n                  <p className=\"description__year\">2013</p>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      // </>\n    )\n  }\n  \n}\n\n// MovieList.propTypes = {\n//   selectedDay: PropTypes.number.isRequired,\n//   isSelected: PropTypes.bool,\n// }\n\n// MovieList.defaultProps = {\n//   isSelected: false,\n// }\n","import React from 'react';\nimport Calendar from 'react-calendar';\nimport { MovieList } from './components/MovieList/MovieList';\n\nimport televisor from './styles/images/televisor.png';\n\nimport './App.css';\nimport '../../app/node_modules/react-calendar/dist/Calendar.css';\n\nclass App extends React.Component {\n  state = {\n    selectedDay: '',\n    isSelected: false,\n  };\n\n  onDaySelected = (selected) => {\n    this.setState({\n      selectedDay: selected,\n      isSelected: true,\n    });\n  }\n\n  goBack = () => {\n    this.setState({\n      selectedDay: '',\n      isSelected: false,\n    });\n  }\n\n  render() {\n    const { selectedDay, isSelected } = this.state;\n    const { showId } = this.props;\n    const { onDaySelected } = this;\n\n    return (\n      <>\n        <header className=\"container header\">\n          <div className=\"header__title\">  \n            <h1 className=\"header__title header__title--text\">SUPER FILM</h1>\n          </div>\n        </header>\n        {!isSelected\n          ? (\n            <div>\n              <section className=\"block\">\n                <div className=\"block__start start\">\n                  <div>\n                    <img\n                      className=\"start__img\"\n                      src={televisor}\n                      alt=\"tv\"\n                      />\n                  </div>\n                  <p className=\"start__text\">\n                    Для получения списка сериалов, пожалуйста, выберите необходимый месяц и день\n                  </p>\n                </div>\n              </section>\n\n              <Calendar onClickDay={onDaySelected} />\n            </div>\n            )\n          : (\n            <div>\n              <button\n                type=\"button\"\n                onClick={this.goBack}\n                className=\"header__button button\"\n              />\n              <MovieList />\n            </div>\n          )\n        }\n      </>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}